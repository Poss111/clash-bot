name: Deployment

on:
  push:
    tags:
      - 'v*'
    paths-ignore:
      - '**/README.md'
      - '**/.gitignore'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: FranzDiebold/github-env-vars-action@v2.1.0

      - name: Deployment Start Discord Webhook
        uses: Poss111/discord-hook-action@v1.6.8
        with:
          discord-hook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: 'Clash Bot Deployment Notification'
          message: 'Starting Github deployment...'
          message-color: '15258703'

      - name: Check
        run : echo build $GITHUB_RUN_NUMBER

      - uses: actions/checkout@v2

      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "--DISCORD_KEY--"
          replace: "${{ secrets.DISCORD_KEY }}"
          include: "task-definition.json"

      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "--CLIENT_ID--"
          replace: "${{ secrets.CLIENT_ID }}"
          include: "task-definition.json"

      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "--SERVICE_URL--"
          replace: "${{ secrets.SERVICE_URL }}"
          include: "task-definition.json"

      - name: Deployment In Progress Discord Webhook
        uses: Poss111/discord-hook-action@v1.6.8
        if: ${{ success() }}
        with:
          discord-hook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: 'Clash Bot Deployment Notification'
          message: 'Deployment in progress...'
          message-color: '16750902'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_SECRET_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Clash-Bot image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: poss11111
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Update task-definition file for deployment
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: clash-bot-dynamic
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Clash-Bot
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: clash-bot-secretive-service
          cluster: clash-bot
          wait-for-service-stability: true

      - name: Deployment Failed Discord Webhook
        uses: Poss111/discord-hook-action@v1.6.8
        if: ${{ failure() }}
        with:
          discord-hook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: 'Clash Bot Deployment Notification'
          message: 'Deployment failed!'
          message-color: '16711680'

      - name: Deployment Succeeded Discord Webhook
        uses: Poss111/discord-hook-action@v1.6.8
        if: ${{ success() }}
        with:
          discord-hook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: 'Clash Bot Deployment Notification'
          message: 'Deployment succeeded!'
          message-color: '65345'
