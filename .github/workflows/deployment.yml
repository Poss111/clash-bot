name: Deployment

on:
#  push:
#    tags:
#      - 'v*'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**/README.md'
      - '**/.gitignore'

jobs:
  deployment:
    name: 'Discord Notification Start'
    runs-on: ubuntu-latest

    steps:
      - uses: FranzDiebold/github-env-vars-action@v2.1.0

      - name: Deployment Start Discord Webhook
        uses: Poss111/discord-hook-action@v1.6.8
        with:
          discord-hook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: 'Clash Bot Deployment Notification'
          message: 'Deployment in progress...'
          message-color: '15258703'

  image-build:
    needs:  deployment
    name: 'Build/Deploy Image'
    runs-on: ubuntu-latest

    outputs:
      image-url: ${{ steps.build-image.outputs.image }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_SECRET_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Clash-Bot image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: poss11111
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::add-mask::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Image Build Failed Discord Webhook
        uses: Poss111/discord-hook-action@v1.6.8
        if: ${{ failure() }}
        with:
          discord-hook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: 'Clash Bot Image Build Notification'
          message: 'Image Build failed!'
          message-color: '16711680'

  terraform-apply:
    needs: image-build
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tfe

    outputs:
      out-come: ${{ steps.tfe-outcome.outcome }}

    steps:
      - uses: FranzDiebold/github-env-vars-action@v2.1.0

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        id: apply
        env:
          TF_VAR_access_key: ${{ secrets.AWS_SECRET_ID }}
          TF_VAR_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          TF_VAR_app_count: 1
          TF_VAR_region: "us-east-1"
          TF_VAR_image_id: ${{ needs.check-applications.outputs.deploy-ui }}
          TF_VAR_prefix: "clash-bot-discord"
          TF_VAR_repository_name: "poss11111"
          TF_VAR_iam_secret_policies: ${{ secrets.IAM_SECRET_POLICIES }}
          TF_VAR_ecs_iam_secret_policies: ${{ secrets.ECS_IAM_SECRET_POLICIES }}
          TF_VAR_ecs_cloudwatch_policies: ${{ secrets.ECS_CLOUDWATCH_POLICIES }}
          TF_VAR_registry_ecr_iam_policies: ${{ secrets.REGISTRY_ECR_IAM_POLICIES }}
          TF_VAR_ecr_specific_iam_policies: ${{ secrets.ECR_SPECIFIC_IAM_POLICIES }}
          TF_VAR_one: ${{ secrets.ONE }}
          TF_VAR_two: ${{ secrets.TWO }}
          TF_VAR_three: ${{ secrets.THREE }}
          TF_VAR_four: ${{ secrets.FOUR }}
        run: terraform apply -auto-approve -input=false

      - name: Terraform Output
        id: tfe-outcome
        if: steps.plan.outcome == 'success'
        run: terraform output

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Deployment Failed Discord Webhook
        uses: Poss111/discord-hook-action@v1.6.8
        if: ${{ failure() }}
        with:
          discord-hook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: 'Clash Bot Deployment Notification'
          message: 'Deployment failed!'
          message-color: '16711680'

      - name: Deployment Succeeded Discord Webhook
        uses: Poss111/discord-hook-action@v1.6.8
        if: ${{ success() }}
        with:
          discord-hook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          title: 'Clash Bot Deployment Notification'
          message: 'Deployment succeeded!'
          message-color: '65345'
