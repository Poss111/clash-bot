name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: FranzDiebold/github-env-vars-action@v2.1.0

    - uses: joelwmale/webhook-action@master
      with:
        url: ${{ secrets.DISCORD_WEBHOOK_URL }}
        headers: '{"Content-Type": "application/json"}'
        body: "{  \"username\": \"Dan Bot\", \"avatar_url\": \"https://i.imgur.com/Hrbi1Ht.jpg\", \"embeds\": [{ \"author\": {\"name\": \"Github\",\"url\": \"https://github.com/Poss111/clash-bot\",\"icon_url\": \"https://img.icons8.com/ios-filled/344/github-2.png\"      },      \"title\": \"Clash Bot Deployment Notification\",      \"url\": \"https://github.com/Poss111/clash-bot/actions/runs/${{ github.run_id }}\",      \"description\": \"Starting Github build...\",      \"color\": 15258703,      \"fields\": [{  \"name\": \"Build #\",  \"value\": \"${{ github.run_id }}\",  \"inline\": true},{  \"name\": \"Branch\",  \"value\": \"${{ github.ref }}\",  \"inline\": true}, { \"name\": \"SHA\", \"value\": \"${{ github.sha }}\", \"inline\": false},{  \"name\": \"Triggered By\",  \"value\": \"${{ github.actor }}\",  \"inline\": false}      ]    }  ]}"

    - name: Check
      run : echo build $GITHUB_RUN_NUMBER

    - uses: actions/checkout@v2

    - name: Find and Replace
      uses: jacobtomlinson/gha-find-replace@master
      with:
        find: "--DISCORD_KEY--"
        replace: "${{ secrets.DISCORD_KEY }}"
        include: "task-definition.json"

    - name: Find and Replace
      uses: jacobtomlinson/gha-find-replace@master
      with:
        find: "--RIOT_API_KEY--"
        replace: "${{ secrets.RIOT_API_KEY }}"
        include: "task-definition.json"

    - name: Find and Replace
      uses: jacobtomlinson/gha-find-replace@master
      with:
        find: "--AWS_SECRET_KEY--"
        replace: "${{ secrets.AWS_SECRET_KEY }}"
        include: "task-definition.json"

    - name: Find and Replace
      uses: jacobtomlinson/gha-find-replace@master
      with:
        find: "--AWS_SECRET_ID--"
        replace: "${{ secrets.AWS_SECRET_ID }}"
        include: "task-definition.json"

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install Dependencies
      run: npm i

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      if: ${{ github.ref == 'refs/heads/master' }}
      with:
        aws-access-key-id: ${{ secrets.AWS_SECRET_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: us-east-1

    - name: Login to ECR
      id: login-ecr
      if: ${{ github.ref == 'refs/heads/master' }}
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push Clash-Bot image to Amazon ECR
      id: build-image
      if: ${{ github.ref == 'refs/heads/master' }}
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: poss11111
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Update task-definition file for deployment
      id: task-def
      if: ${{ github.ref == 'refs/heads/master' }}
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: clash-bot-dynamic
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Clash-Bot
      if: ${{ github.ref == 'refs/heads/master' }}
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: clash-bot-secretive-service
        cluster: clash-bot
        wait-for-service-stability: true

    - name: Send failure webhook
      uses: joelwmale/webhook-action@master
      if: ${{ failure() }}
      with:
        url: ${{ secrets.DISCORD_WEBHOOK_URL }}
        headers: '{"Content-Type": "application/json"}'
        body: "{\"username\": \"Dan Bot\", \"avatar_url\": \"https://i.imgur.com/Hrbi1Ht.jpg\", \"embeds\": [{\"author\": {\"name\": \"Github\", \"url\": \"https://github.com/Poss111/clash-bot\", \"icon_url\": \"https://img.icons8.com/ios-filled/344/github-2.png\"}, \"title\": \"Clash Bot Deployment Notification\", \"url\": \"https://github.com/Poss111/clash-bot/actions/runs/${{ github.run_id }}\", \"description\": \"Github build failed!\", \"color\": 16711680, \"fields\": [{\"name\": \"Build #\", \"value\": \"${{ github.run_id }}\", \"inline\": true}, {\"name\": \"Branch\", \"value\": \"${{ github.ref }}\", \"inline\": true}, {\"name\": \"SHA\", \"value\": \"${{ github.sha }}\", \"inline\": false}, {\"name\": \"Triggered By\", \"value\": \"${{ github.actor }}\", \"inline\": false}]}]}"

    - name: Send success webhook
      uses: joelwmale/webhook-action@master
      if: ${{ success() }}
      with:
        url: ${{ secrets.DISCORD_WEBHOOK_URL }}
        headers: '{"Content-Type": "application/json"}'
        body: "{\"username\": \"Dan Bot\", \"avatar_url\": \"https://i.imgur.com/Hrbi1Ht.jpg\", \"embeds\": [{\"author\": {\"name\": \"Github\", \"url\": \"https://github.com/Poss111/clash-bot\", \"icon_url\": \"https://img.icons8.com/ios-filled/344/github-2.png\"}, \"title\": \"Clash Bot  Deployment Notification\", \"url\": \"https://github.com/Poss111/clash-bot/actions/runs/${{ github.run_id }}\", \"description\": \"Github build succeeded!\", \"color\": 65345, \"fields\": [{\"name\": \"Build #\", \"value\": \"${{ github.run_id }}\", \"inline\": true}, {\"name\": \"Branch\", \"value\": \"${{ github.ref }}\", \"inline\": true}, {\"name\": \"SHA\", \"value\": \"${{ github.sha }}\", \"inline\": false}, {\"name\": \"Triggered By\", \"value\": \"${{ github.actor }}\", \"inline\": false}]}]}"
